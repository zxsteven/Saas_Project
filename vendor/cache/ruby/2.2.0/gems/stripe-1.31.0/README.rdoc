= Stripe Ruby bindings {<img src="https://travis-ci.org/stripe/stripe-ruby.svg?branch=master" alt="Build Status" />}[https://travis-ci.org/stripe/stripe-ruby]

The Stripe Ruby bindings provide a small SDK for convenient access to the
Stripe API from applications written in the Ruby language. It provides a
pre-defined set of classes for API resources that initialize themselves
dynamically from API responses which allows the bindings to tolerate a number
of different versions of the API.

The bindings also provide other features. For example:

* Easy configuration path for fast setup and use.
* Helpers for pagination.
* Tracking of "fresh" values in API resources so that partial updates can be
  executed.
* Built-in mechanisms for the serialization of parameters according to the
  expectations of Stripe's API.

== Documentation

{Ruby API Docs}[https://stripe.com/docs/api/ruby#intro]

== Installation

You don't need this source code unless you want to modify the gem. If
you just want to use the Stripe Ruby bindings, you should run:

  gem install stripe

If you want to build the gem from source:

  gem build stripe.gemspec

== Requirements

* Ruby 1.8.7 or above. (Ruby 1.8.6 may work if you load
  ActiveSupport.) For Ruby versions before 1.9.2, you'll need to add this to your Gemfile:

    if Gem::Version.new(RUBY_VERSION) < Gem::Version.new('1.9.2')
      gem 'rest-client', '~> 1.6.8'
    end


* rest-client, json

== Bundler

If you are installing via bundler, you should be sure to use the https
rubygems source in your Gemfile, as any gems fetched over http could potentially be
compromised in transit and alter the code of gems fetched securely over https:

  source 'https://rubygems.org'

  gem 'rails'
  gem 'stripe'

== Development

Run all tests:

    bundle exec rake

Run a single test suite:

    bundle exec ruby -Ilib/ test/stripe/util_test.rb

Run a single test:

    bundle exec ruby -Ilib/ test/stripe/util_test.rb -n /should.convert.names.to.symbols/
